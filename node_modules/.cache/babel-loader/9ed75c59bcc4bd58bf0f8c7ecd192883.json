{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mikutech\\\\mikutechWebProgrammingTest2\\\\src\\\\frappe-gantt-react\\\\FrappeGantt.tsx\";\nimport React, { createRef } from \"react\";\nimport Gantt from \"../frappe-gantt\";\nimport { Task } from \"./Task\";\nimport { ViewMode } from \"./ViewMode\";\nconst frappeGanttDefaultProps = {\n  viewMode: ViewMode.Day,\n  onTasksChange: tasks => {},\n  onClick: task => {},\n  onDateChange: (task, start, end) => {},\n  onProgressChange: (task, progress) => {},\n  onViewChange: mode => {}\n};\nexport class FrappeGantt extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._target = createRef();\n    this._svg = createRef();\n    this._gantt = null;\n    this.state = {\n      viewMode: null,\n      tasks: []\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    return {\n      viewMode: nextProps.viewMode,\n      tasks: nextProps.tasks.map(t => new Task(t))\n    };\n  }\n\n  componentDidUpdate() {\n    if (this._gantt) {\n      this._gantt.refresh(this.state.tasks);\n\n      this._gantt.change_view_mode(this.state.viewMode);\n    }\n  }\n\n  componentDidMount() {\n    this._gantt = new Gantt(this._svg.current, this.state.tasks, {\n      on_click: this.props.onClick,\n      on_view_change: this.props.onViewChange,\n      on_progress_change: (task, progress) => {\n        this.props.onProgressChange(task, progress);\n        this.props.onTasksChange(this.props.tasks);\n      },\n      on_date_change: (task, start, end) => {\n        this.props.onDateChange(task, start, end);\n        this.props.onTasksChange(this.props.tasks);\n      }\n    });\n\n    if (this._gantt) {\n      this._gantt.change_view_mode(this.state.viewMode);\n    }\n\n    const midOfSvg = this._svg.current.clientWidth * 0.5;\n    this._target.current.scrollLeft = midOfSvg;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        overflow: \"scroll\"\n      },\n      ref: this._target,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      ref: this._svg,\n      width: \"100%\",\n      height: \"100%\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nFrappeGantt.defaultProps = frappeGanttDefaultProps;","map":{"version":3,"sources":["C:/Mikutech/mikutechWebProgrammingTest2/src/frappe-gantt-react/FrappeGantt.tsx"],"names":["React","createRef","Gantt","Task","ViewMode","frappeGanttDefaultProps","viewMode","Day","onTasksChange","tasks","onClick","task","onDateChange","start","end","onProgressChange","progress","onViewChange","mode","FrappeGantt","Component","_target","_svg","_gantt","state","getDerivedStateFromProps","nextProps","map","t","componentDidUpdate","refresh","change_view_mode","componentDidMount","current","on_click","props","on_view_change","on_progress_change","on_date_change","midOfSvg","clientWidth","scrollLeft","render","overflow","defaultProps"],"mappings":"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","sourcesContent":["import React, { createRef } from \"react\";\r\nimport Gantt from \"../frappe-gantt\";\r\nimport { Moment } from \"moment\";\r\nimport { Task } from \"./Task\";\r\nimport { ViewMode } from \"./ViewMode\";\r\n\r\nexport type FrappeGanttProps = {\r\n  tasks: Task[];\r\n} & Partial<FrappeGanttOptionalProps>;\r\n\r\nexport type FrappeGanttOptionalProps = Readonly<typeof frappeGanttDefaultProps>;\r\n\r\nconst frappeGanttDefaultProps = {\r\n  viewMode: ViewMode.Day,\r\n  onTasksChange: (tasks: Task[]) => {},\r\n  onClick: (task: Task) => {},\r\n  onDateChange: (task: Task, start: Moment, end: Moment) => {},\r\n  onProgressChange: (task: Task, progress: number) => {},\r\n  onViewChange: (mode: ViewMode) => {}\r\n};\r\n\r\nexport class FrappeGantt extends React.Component<FrappeGanttProps, any> {\r\n  private _target = createRef<HTMLDivElement>();\r\n  private _svg = createRef<SVGSVGElement>();\r\n  private _gantt: any = null;\r\n\r\n  static defaultProps = frappeGanttDefaultProps;\r\n\r\n  state = {\r\n    viewMode: null,\r\n    tasks: []\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps: FrappeGanttProps, state: any) {\r\n    return {\r\n      viewMode: nextProps.viewMode,\r\n      tasks: nextProps.tasks.map(t => new Task(t))\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this._gantt) {\r\n      this._gantt.refresh(this.state.tasks);\r\n      this._gantt.change_view_mode(this.state.viewMode);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._gantt = new Gantt(this._svg.current, this.state.tasks, {\r\n      on_click: this.props.onClick,\r\n      on_view_change: this.props.onViewChange,\r\n      on_progress_change: (task: Task, progress: number) => {\r\n        this.props.onProgressChange!(task, progress);\r\n        this.props.onTasksChange!(this.props.tasks);\r\n      },\r\n      on_date_change: (task: Task, start: Moment, end: Moment) => {\r\n        this.props.onDateChange!(task, start, end);\r\n        this.props.onTasksChange!(this.props.tasks);\r\n      }\r\n    });\r\n\r\n    if (this._gantt) {\r\n      this._gantt.change_view_mode(this.state.viewMode);\r\n    }\r\n\r\n    const midOfSvg = this._svg.current!.clientWidth * 0.5;\r\n    this._target.current!.scrollLeft = midOfSvg;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ overflow: \"scroll\" }} ref={this._target}>\r\n        <svg\r\n          ref={this._svg}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}