{"ast":null,"code":"export class Task {\n  constructor(options = {}) {\n    this._dependencies = [];\n    this.id = \"\";\n    this.name = \"\";\n    this.start = \"\";\n    this.end = \"\";\n    this._progress = 0.52;\n    this.custom_class = void 0;\n    Object.assign(this, options);\n  }\n  /**\r\n   * Progress in percentage\r\n   */\n\n\n  get progress() {\n    return this._progress || 0.52;\n  }\n\n  set progress(value) {\n    this._progress = value || 0.52;\n  }\n  /**\r\n   * A css custom class for the task chart bar\r\n   */\n\n\n  setDependencies(value) {\n    this._dependencies = Array.isArray(value) ? value : value.split(\",\").map(d => d.trim());\n  }\n\n  set dependencies(value) {\n    this._dependencies = Array.isArray(value) ? value : value.split(\",\").map(t => t.trim()).filter(Boolean);\n  }\n\n  get dependencies() {\n    return this._dependencies;\n  }\n\n}","map":{"version":3,"sources":["C:/Mikutech/mikutechWebProgrammingTest2/src/frappe-gantt-react/Task.ts"],"names":["Task","constructor","options","_dependencies","id","name","start","end","_progress","custom_class","Object","assign","progress","value","setDependencies","Array","isArray","split","map","d","trim","dependencies","t","filter","Boolean"],"mappings":"AAAA,OAAO,MAAMA,IAAN,CAAW;AAQhBC,EAAAA,WAAW,CAACC,OAAsB,GAAG,EAA1B,EAA8B;AAAA,SAPjCC,aAOiC,GAPE,EAOF;AAAA,SALzCC,EAKyC,GAL5B,EAK4B;AAAA,SAJzCC,IAIyC,GAJ1B,EAI0B;AAAA,SAHzCC,KAGyC,GAHzB,EAGyB;AAAA,SAFzCC,GAEyC,GAF3B,EAE2B;AAAA,SAOjCC,SAPiC,GAOb,IAPa;AAAA,SAoBzCC,YApByC;AACvCC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBT,OAApB;AACD;AAED;;;;;AAKA,MAAIU,QAAJ,GAAe;AACb,WAAO,KAAKJ,SAAL,IAAkB,IAAzB;AACD;;AAED,MAAII,QAAJ,CAAaC,KAAb,EAAoB;AAClB,SAAKL,SAAL,GAAiBK,KAAK,IAAI,IAA1B;AACD;AAED;;;;;AAKAC,EAAAA,eAAe,CAACD,KAAD,EAA2B;AACxC,SAAKV,aAAL,GAAqBY,KAAK,CAACC,OAAN,CAAcH,KAAd,IACjBA,KADiB,GAEjBA,KAAK,CAACI,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAA1B,CAFJ;AAGD;;AAED,MAAIC,YAAJ,CAAiBR,KAAjB,EAA2C;AACzC,SAAKV,aAAL,GAAqBY,KAAK,CAACC,OAAN,CAAcH,KAAd,IACjBA,KADiB,GAEjBA,KAAK,CACFI,KADH,CACS,GADT,EAEGC,GAFH,CAEOI,CAAC,IAAIA,CAAC,CAACF,IAAF,EAFZ,EAGGG,MAHH,CAGUC,OAHV,CAFJ;AAMD;;AAED,MAAIH,YAAJ,GAAsC;AACpC,WAAO,KAAKlB,aAAZ;AACD;;AA/Ce","sourcesContent":["export class Task {\r\n  private _dependencies: string[] | string = [];\r\n\r\n  id: string = \"\";\r\n  name: string = \"\";\r\n  start: string = \"\";\r\n  end: string = \"\";\r\n\r\n  constructor(options: Partial<Task> = {}) {\r\n    Object.assign(this, options);\r\n  }\r\n\r\n  /**\r\n   * Progress in percentage\r\n   */\r\n  private _progress: number = 0.52;\r\n\r\n  get progress() {\r\n    return this._progress || 0.52;\r\n  }\r\n\r\n  set progress(value) {\r\n    this._progress = value || 0.52;\r\n  }\r\n\r\n  /**\r\n   * A css custom class for the task chart bar\r\n   */\r\n  custom_class?: string;\r\n\r\n  setDependencies(value: string | string[]) {\r\n    this._dependencies = Array.isArray(value)\r\n      ? value\r\n      : value.split(\",\").map(d => d.trim());\r\n  }\r\n\r\n  set dependencies(value: string[] | string) {\r\n    this._dependencies = Array.isArray(value)\r\n      ? value\r\n      : value\r\n          .split(\",\")\r\n          .map(t => t.trim())\r\n          .filter(Boolean);\r\n  }\r\n\r\n  get dependencies(): string[] | string {\r\n    return this._dependencies;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}